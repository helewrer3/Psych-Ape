<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
movespeed = 3;
move = 0;
hspd = 0;
vspd = 0;
flag_m = 0;
image_speed = 0;

globalvar item_no;
item_no = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remove Invincibility
sprite_index = spr_player;
image_speed = .2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Radiance

size = 170;
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_ellipse_color(x - size/2 - view_xview, y - size/2 - view_yview, x + size/2 - view_xview, y + size/2 - view_yview, c_white, c_black, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move and shit

//Variables
r_key = keyboard_check(vk_right);          // Right
l_key = -keyboard_check(vk_left);          // Left
u_key = -keyboard_check(vk_up);            // Up
d_key = keyboard_check(vk_down);           // Down
s_key = keyboard_check_pressed(vk_space);  // Dash

//Horizontal Move Initialization
move = r_key + l_key;
hspd = move*movespeed;

if(abs(move) || abs(u_key) || d_key || s_key){
    if(sprite_index == spr_player_istill){
        sprite_index = spr_player_i;
        image_index = 0;
    }
    image_speed = .1;
}
else if(sprite_index == spr_player){
    image_index = 0;
    image_speed = 0;
}
else if(sprite_index == spr_player_i){
    sprite_index = spr_player_istill;
    image_index = 0;
    image_speed = .1;
}

//Horizontal Dash
if(s_key) 
{
    hspd *= 20;
    audio_play_sound(snd_dash, 1, 0);
    dash = instance_create(x, y, obj_dash);
    dash.sprite_index = sprite_index;
    dash.image_index = image_index;
    dash.image_angle = image_angle;
    dash.image_blend = image_blend;
}

//Horizontal Collision
if(place_meeting(x+hspd, y, obj_wall))
{
    while(!place_meeting(x + sign(hspd), y, obj_wall))
        x += sign(hspd);
    hspd = 0;
}

//Move And Animation
x += hspd;
if(move == 1)
{
    image_angle = 0;
}
else if(move == -1)
{
    image_angle = 180;
}

//Vertical Move Initialization
move = u_key + d_key;
vspd = move*movespeed;

//Vertical Dash
if(s_key) 
{
    vspd *= 20;
    dash = instance_create(x, y, obj_dash);
    audio_play_sound(snd_dash, 1, 0);
    dash.sprite_index = sprite_index;
    dash.image_index = image_index;
    dash.image_angle = image_angle;
    dash.image_blend = image_blend;
}

//Vertical Collision
if(place_meeting(x, y + vspd, obj_wall))
{
    while(!place_meeting(x, y + sign(vspd), obj_wall))
        y += sign(vspd);
    vspd = 0;
}

//Move And Animation
y += vspd;
if(move != 0)
{
    image_angle = -90*move;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill Player
if(global.hp == 0) 
{
    instance_destroy();
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart Game
if(keyboard_check_pressed(ord('R'))) game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_item_main">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Next Room
if(keyboard_check_pressed(vk_enter)){
    with(other){
        instance_destroy();
    }
    audio_play_sound(snd_item, 1, 0);
    f_rate = .1;
    instance_create(0, 0, obj_fade_n);
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_item">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Show
if(keyboard_check_pressed(vk_enter)){
    with(other){
        instance_destroy();
    }
    audio_play_sound(snd_item, 1, 0);
    instance_create(x, y, obj_drawer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
